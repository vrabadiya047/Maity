{"ast":null,"code":"var _jsxFileName = \"D:\\\\wedding\\\\Maity_task\\\\src\\\\components\\\\charts\\\\LaunchTrendLine.tsx\";\n// components/charts/LaunchTrendLine.tsx\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nconst LaunchTrendLine = ({\n  data\n}) => {\n  const yearCounts = {};\n  data.forEach(({\n    year,\n    active\n  }) => {\n    if (!year) return;\n    if (!yearCounts[year]) {\n      yearCounts[year] = {\n        active: 0,\n        inactive: 0\n      };\n    }\n    if (active) {\n      yearCounts[year].active++;\n    } else {\n      yearCounts[year].inactive++;\n    }\n  });\n  const sortedYears = Object.keys(yearCounts).sort();\n  const chartData = {\n    labels: sortedYears,\n    datasets: [{\n      label: 'Active Satellites',\n      data: sortedYears.map(y => yearCounts[y].active),\n      borderColor: 'rgba(35, 168, 224, 1)',\n      backgroundColor: 'rgba(35, 168, 224, 0.2)',\n      fill: false,\n      tension: 0.2\n    }, {\n      label: 'Inactive Satellites',\n      data: sortedYears.map(y => yearCounts[y].inactive),\n      borderColor: 'rgba(255, 99, 132, 1)',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      fill: false,\n      tension: 0.2\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        labels: {\n          color: 'white'\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Launch Year',\n          color: 'white'\n        },\n        ticks: {\n          color: 'white'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Satellite Count',\n          color: 'white'\n        },\n        ticks: {\n          color: 'white'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chart-title\",\n      children: \"Launch Trend by Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }, this);\n};\n_c = LaunchTrendLine;\nexport default LaunchTrendLine;\nvar _c;\n$RefreshReg$(_c, \"LaunchTrendLine\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","LaunchTrendLine","data","yearCounts","forEach","year","active","inactive","sortedYears","Object","keys","sort","chartData","labels","datasets","label","map","y","borderColor","backgroundColor","fill","tension","options","responsive","plugins","legend","color","scales","x","title","display","text","ticks","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/wedding/Maity_task/src/components/charts/LaunchTrendLine.tsx"],"sourcesContent":["// components/charts/LaunchTrendLine.tsx\r\nimport React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface Props {\r\n  data: {\r\n    year: string;\r\n    active: boolean;\r\n  }[];\r\n}\r\n\r\nconst LaunchTrendLine: React.FC<Props> = ({ data }) => {\r\n  const yearCounts: Record<string, { active: number; inactive: number }> = {};\r\n\r\n  data.forEach(({ year, active }) => {\r\n    if (!year) return;\r\n    if (!yearCounts[year]) {\r\n      yearCounts[year] = { active: 0, inactive: 0 };\r\n    }\r\n    if (active) {\r\n      yearCounts[year].active++;\r\n    } else {\r\n      yearCounts[year].inactive++;\r\n    }\r\n  });\r\n\r\n  const sortedYears = Object.keys(yearCounts).sort();\r\n\r\n  const chartData = {\r\n    labels: sortedYears,\r\n    datasets: [\r\n      {\r\n        label: 'Active Satellites',\r\n        data: sortedYears.map((y) => yearCounts[y].active),\r\n        borderColor: 'rgba(35, 168, 224, 1)',\r\n        backgroundColor: 'rgba(35, 168, 224, 0.2)',\r\n        fill: false,\r\n        tension: 0.2,\r\n      },\r\n      {\r\n        label: 'Inactive Satellites',\r\n        data: sortedYears.map((y) => yearCounts[y].inactive),\r\n        borderColor: 'rgba(255, 99, 132, 1)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n        fill: false,\r\n        tension: 0.2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: 'white',\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: { display: true, text: 'Launch Year', color: 'white' },\r\n        ticks: { color: 'white' },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        title: { display: true, text: 'Satellite Count', color: 'white' },\r\n        ticks: { color: 'white' },\r\n      },\r\n    },\r\n  };\r\n\r\n \r\nreturn (\r\n  <div className=\"chart-section\">\r\n    <h2 className=\"chart-title\">Launch Trend by Year</h2>\r\n    <Line data={chartData} options={options} />\r\n  </div>\r\n);\r\n  \r\n  };\r\n\r\nexport default LaunchTrendLine;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}